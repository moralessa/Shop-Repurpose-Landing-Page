{% comment %}
    ** This snippet was generated by EComposer - Visual Page Builder
{% endcomment %}

{%- assign tmpl = request.page_type | strip   -%}
{% if tmpl == 'product' and product != blank  %}
    {% for image in product.images %}
        <link rel="preload" href="{{ image | img_url: 'master' }}">
    {% endfor%}
{% endif %}
{% assign ecom_configs = shop.metafields.ecomposer.configs.value %}
{% if tmpl == '' %}
    <style>
    .ecom-cart-popup {
        display: grid;
        position: fixed;
        inset: 0;
        z-index: 9999999;
        align-content: center;
        padding: 5px;
        justify-content: center;
        align-items: center;
        justify-items: center;
    }

    .ecom-cart-popup::before {content: ' ';position: absolute;background: #e5e5e5b3;inset: 0;}
    .ecom-ajax-loading{
        cursor:not-allowed;
    pointer-events: none;
    opacity: 0.6;
    }


    #ecom-toast {
    visibility: hidden;
    max-width: 50px;
    min-height: 50px;
    margin: auto;
    background-color: #333;
    color: #fff;
    text-align: center;
    border-radius: 2px;
    position: fixed;
    z-index: 1;
    left: 0;
    right: 0;
    bottom: 30px;
    font-size: 17px;
    display: grid;
    grid-template-columns: 50px auto;
    align-items: center;
    justify-content: start;
    align-content: center;
    justify-items: start;
    }
    #ecom-toast.ecom-toast-show {
    visibility: visible;
    -webkit-animation: ecomFadein 0.5s, ecomExpand 0.5s 0.5s, ecomStay 3s 1s, ecomShrink 0.5s 2s, ecomFadeout 0.5s 2.5s;
    animation: ecomFadein 0.5s, ecomExpand 0.5s 0.5s, ecomStay 3s 1s, ecomShrink 0.5s 4s, ecomFadeout 0.5s 4.5s;
    }
    #ecom-toast #ecom-toast-icon {
    width: 50px;
    height: 100%;
    /* float: left; */
    /* padding-top: 16px; */
    /* padding-bottom: 16px; */
    box-sizing: border-box;
    background-color: #111;
    color: #fff;
    padding: 5px;
    }
    #ecom-toast .ecom-toast-icon-svg {
    width: 100%;
    height: 100%;
    display: block;
    position: relative;
    vertical-align: middle;
    margin: auto;
    text-align: center;
    /* padding: 5px; */
    }
    #ecom-toast #ecom-toast-desc {
    color: #fff;
    padding: 16px;
    overflow: hidden;
    white-space: nowrap;
    }

    @-webkit-keyframes ecomFadein {
    from {
        bottom: 0;
        opacity: 0;
    }
    to {
        bottom: 30px;
        opacity: 1;
    }
    }
    @keyframes fadein {
    from {
        bottom: 0;
        opacity: 0;
    }
    to {
        bottom: 30px;
        opacity: 1;
    }
    }
    @-webkit-keyframes ecomExpand {
    from {
        min-width: 50px;
    }
    to {
        min-width: var(--ecom-max-width);
    }
    }
    @keyframes ecomExpand {
    from {
        min-width: 50px;
    }
    to {
        min-width: var(--ecom-max-width);
    }
    }
    @-webkit-keyframes ecomStay {
    from {
        min-width: var(--ecom-max-width);
    }
    to {
        min-width: var(--ecom-max-width);
    }
    }
    @keyframes ecomStay {
    from {
        min-width: var(--ecom-max-width);
    }
    to {
        min-width: var(--ecom-max-width);
    }
    }
    @-webkit-keyframes ecomShrink {
    from {
        min-width: var(--ecom-max-width);
    }
    to {
        min-width: 50px;
    }
    }
    @keyframes ecomShrink {
    from {
        min-width: var(--ecom-max-width);
    }
    to {
        min-width: 50px;
    }
    }
    @-webkit-keyframes ecomFadeout {
    from {
        bottom: 30px;
        opacity: 1;
    }
    to {
        bottom: 60px;
        opacity: 0;
    }
    }
    @keyframes ecomFadeout {
    from {
        bottom: 30px;
        opacity: 1;
    }
    to {
        bottom: 60px;
        opacity: 0;
    }
    }
    </style>

    <script type="text/javascript" id="ecom-theme-helpers" async="async">
        window.EComposer = window.EComposer || {};
        (function(){
            {%- if shop.metafields.ecomposer.configs -%}
                this.configs = {{ shop.metafields.ecomposer.configs.value | json }};
            {%- else -%}
                this.configs = {
                ajax_cart: {
                    enable: false
                },
                quickview: {
                    enable: false
                }
                
                };
            {%- endif -%}
            {% if shop.metafields.ecomposer['ajax-cart'] %}
                this.configs.ajax_cart =  {{ shop.metafields.ecomposer['ajax-cart'].value | json }};
            {% endif %}
        {% if shop.customer_accounts_enabled and customer %}
            this.customer = {
            id: {{customer.id}},
            name : "{{customer.name | escape }}"
            }
        {% else %}
            this.customer = false;
        {% endif %}
            this.routes = {
                domain: '{{shop.secure_url}}',
                root_url: '{{ routes.root_url }}',
                collections_url: '{{ routes.collections_url }}',
                all_products_collection_url: '{{ routes.all_products_collection_url }}',
                cart_url:'{{ routes.cart_url }}',
                cart_add_url:'{{ routes.cart_add_url }}',
                cart_change_url:'{{ routes.cart_change_url }}',
                cart_clear_url: '{{ routes.cart_clear_url }}',
                cart_update_url: '{{ routes.cart_update_url }}',
                product_recommendations_url: '{{ routes.product_recommendations_url }}'
            };
            this.queryParams = {};
            if (window.location.search.length) {
                new URLSearchParams(window.location.search).forEach((value,key)=>{
                    this.queryParams[key] = value;
                })
            }
            this.money_format = {{ shop.money_format | json  }},
            this.money_with_currency_format = {{shop.money_with_currency_format | json }},
            this.formatMoney = function(t, e) {
                function n(t, e) {
                    return void 0 === t ? e : t
                }
                function o(t, e, o, i) {
                    if (e = n(e, 2),
                    o = n(o, ","),
                    i = n(i, "."),
                    isNaN(t) || null == t)
                        return 0;
                    var r = (t = (t / 100).toFixed(e)).split(".");
                    return r[0].replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1" + o) + (r[1] ? i + r[1] : "")
                }
                "string" == typeof t && (t = t.replace(".", ""));
                var i = ""
                , r = /\{\{\s*(\w+)\s*\}\}/
                , a = e || this.money_format;
                switch (a.match(r)[1]) {
                case "amount":
                    i = o(t, 2);
                    break;
                case "amount_no_decimals":
                    i = o(t, 0);
                    break;
                case "amount_with_comma_separator":
                    i = o(t, 2, ".", ",");
                    break;
                case "amount_with_space_separator":
                    i = o(t, 2, " ", ",");
                    break;
                case "amount_with_period_and_space_separator":
                    i = o(t, 2, " ", ".");
                    break;
                case "amount_no_decimals_with_comma_separator":
                    i = o(t, 0, ".", ",");
                    break;
                case "amount_no_decimals_with_space_separator":
                    i = o(t, 0, " ");
                    break;
                case "amount_with_apostrophe_separator":
                    i = o(t, 2, "'", ".")
                }
                return a.replace(r, i)
            }
            this.resizeImage = function(t, r) {
                try {
                    if (t.indexOf('cdn.shopify.com') === -1)
                        return t;
                    if (!r || "original" == r ||  "full" == r || "master" == r)
                        return t;
                    var o = t.match(/\.(jpg|jpeg|gif|png|bmp|bitmap|tiff|tif)((\#[0-9a-z\-]+)?(\?v=.*)?)?$/igm);
                    if (null == o)
                        return null;
                    var i = t.split(o[0])
                    , x = o[0];
                    return i[0] + "_" + r + x;
                } catch (o) {
                    return t
                }
            },
            this.getProduct = function(handle){
            if(!handle)
            {
                return false;
            }
            let endpoint = this.routes.root_url + '/products/' + handle + '.js'
            if(window.ECOM_LIVE)
            {
                endpoint = '/shop/builder/ajax/ecom-proxy/products/' + handle;
            }
            return  window.fetch(endpoint,{
                headers: {
                'Content-Type' : 'application/json'
                }
            })
            .then(res=> res.json());
            
            }
        }).bind(window.EComposer)();
    </script>
    
{% endif %}
{%- if  ecom_configs.custom_code.enable_jquery or ECOM_THEME  or shop.metafields.ecomposer.configs == blank or shop.metafields.ecomposer.configs.value  == blank -%}
    <script src="https://cdn.ecomposer.app/vendors/js/jquery.min.js"  crossorigin="anonymous" referrerpolicy="no-referrer"></script>
{%- endif -%}



